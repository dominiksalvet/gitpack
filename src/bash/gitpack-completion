#!/bin/bash

#-------------------------------------------------------------------------------
# Copyright 2019-2020 Dominik Salvet
# https://github.com/dominiksalvet/gitpack
#-------------------------------------------------------------------------------
# This file represents a GitPack extension, which incorporates a prompting tab
# completion of GitPak arguments into Bash shells. It is expected to be sourced.
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# COMPLETION GENERATOR
#-------------------------------------------------------------------------------

_gitpack() {
    # the list of possible subcommands
    local -r SUBCOMMANDS='install uninstall status
                          list clean paths help about' &&
    local cur_word="${COMP_WORDS[COMP_CWORD]}" && # the current part of the word
    local subcommand_index &&
    subcommand_index="$(_gitpack_subcommand_index "${COMP_WORDS[@]}")" &&

    if ! [ "$subcommand_index" ]; then # no action or command so far
        mapfile -t COMPREPLY < <(compgen -W "$SUBCOMMANDS" -- "$cur_word")
    else # repository URLs
        local item="${COMP_WORDS[subcommand_index]}" &&
        case "$item" in # only for actions
            install | uninstall | status) _gitpack_url "$cur_word" ;;
        esac
    fi
}

# $@ - completion words array
_gitpack_subcommand_index() {
    local arr=("$@") && # interpret input as an array
    local accept_next=false &&

    local item &&
    for ((i=1; i<COMP_CWORD; i++)); do # ignore first and last items
        item="${arr[i]}" &&
        if [ "$accept_next" = true ]; then
            echo "$i"; return
        fi &&
        if [ "$item" = "${item#-}" ]; then # no dash prefix
            echo "$i"; return
        elif [ "$item" = '--' ]; then
            accept_next=true
        fi || return
    done
}

# $1 - current URL word
_gitpack_url() {
    # collect global and local GitPack URL references to form a hint
    local urls && urls="$(
        cut -f 1 -d ' ' /var/lib/gitpack/status 2>/dev/null
        cut -f 1 -d ' ' /var/cache/gitpack/fetched 2>/dev/null
        cut -f 1 -d ' ' "$HOME"/.local/share/gitpack/status 2>/dev/null
        cut -f 1 -d ' ' "$HOME"/.cache/gitpack/fetched 2>/dev/null
        true
    )" &&
    mapfile -t COMPREPLY < <(compgen -W "$urls" -- "$1")
}

#-------------------------------------------------------------------------------
# APPLY COMPLETION
#-------------------------------------------------------------------------------

# register the gitpack completion to the current shell environment
complete -F _gitpack gitpack
