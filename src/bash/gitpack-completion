#!/bin/bash

#-------------------------------------------------------------------------------
# Copyright 2019-2020 Dominik Salvet
# https://github.com/dominiksalvet/gitpack
#-------------------------------------------------------------------------------
# This file represents a GitPack extension, which incorporates a prompting tab
# completion of GitPak arguments into Bash shells. It is expected to be sourced.
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# ENTRY POINT
#-------------------------------------------------------------------------------

_gitpack() {
    local -r SUBCOMMANDS='install uninstall status
                          list clean paths help about' &&
    local cur words cword subcommand_index &&

    _gitpack_init_comp &&
    subcommand_index="$(_gitpack_subcommand_index)" &&

    if ! [ "$subcommand_index" ]; then # no action or command so far
        mapfile -t COMPREPLY < <(compgen -W "$SUBCOMMANDS" -- "$cur")
    else # repository URLs
        local item="${COMP_WORDS[subcommand_index]}" &&
        case "$item" in # only for actions
            install | uninstall | status) _gitpack_url ;;
        esac
    fi
}

#-------------------------------------------------------------------------------
# INITIALIZATION
#-------------------------------------------------------------------------------

# write cur, words, cword
_gitpack_init_comp() {
    if command -v _get_comp_words_by_ref > /dev/null; then # more features
        _get_comp_words_by_ref cur words cword
    else # less features as a fallback
        cur="${COMP_WORDS[COMP_CWORD]}" &&
        words=("${COMP_WORDS[@]}") &&
        cword="$COMP_CWORD"
    fi
}

#-------------------------------------------------------------------------------
# HELPER FUNCTIONS
#-------------------------------------------------------------------------------

# read words, cword
_gitpack_subcommand_index() {
    local accept_next=false item &&
    for ((i=1; i<cword; i++)); do # ignore first and last items
        item="${words[i]}" &&
        if [ "$accept_next" = true ]; then
            echo "$i"; return
        fi &&
        if [ "$item" = "${item#-}" ]; then # no dash prefix
            echo "$i"; return
        elif [ "$item" = '--' ]; then
            accept_next=true
        fi || return
    done
}

# read cur
_gitpack_url() {
    # collect global and local GitPack URL references to form a hint
    local urls && urls="$(
        cut -f 1 -d ' ' \
            /var/lib/gitpack/status \
            /var/cache/gitpack/fetched \
            "$HOME"/.local/share/gitpack/status \
            "$HOME"/.cache/gitpack/fetched 2>/dev/null
        true
    )" &&
    mapfile -t COMPREPLY < <(compgen -W "$urls" -- "$cur")
}

#-------------------------------------------------------------------------------
# REGISTER COMPLETION
#-------------------------------------------------------------------------------

# load the gitpack completion into the current Bash environment
complete -F _gitpack gitpack
